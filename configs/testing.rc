_extends = ./base_env.rc
_wsginame = dev.wsgi
_urlhost = localhost
_uses_apache = False
_uses_ngnix = False
_gitbranch = develop
_is_production_env = false
_ini_file = testing.ini
pipeline:main__pipeline = assembl
pyramid.default_locale_name = en
assembl_handle_exceptions = false
retry.attempts = 2
login_providers = google-oauth2
debugtoolbar.enabled = false
sqlalchemy.echo = True
*db_user = assembl_test
*db_password = assembl_test
*db_database = idealoom_test
use_elasticsearch = false
assembl.domain = assembl.net
beaker.session.cookie_expires = false
dogpile_cache.expiration_time = 600
public_hostname = localhost
public_port = 6546
accept_secure_connection = false
require_secure_connection = false
changes.socket = ipc:///tmp/assembl_changes/3
changes.websocket.port = 8088
changes.websocket.proxied = false
assembl.imodeleventwatcher = assembl.models.notification.ModelEventWatcherNotificationSubscriptionDispatcher
celery_tasks.notification_dispatch.imodeleventwatcher = assembl.lib.model_watcher.ModelEventWatcherPrinter
celery_tasks.broker = redis://localhost:6379/4
celery_tasks.notify.num_workers = 1
celery_tasks.translate.num_workers = 1
test_with_zope = false
server:main__port = 6546
handlers__keys = console
logger_root__level = INFO
logger_root__handlers = console
logger_assembl__level = INFO
logger_assembl__handlers =
logger_sqlalchemy__level = INFO
logger_sqlalchemy__handlers =
logger_alembic__level = INFO
logger_alembic__handlers =
logger_sentry__level = INFO
logger_sentry__handlers =
circus__autostart_celery_imap = false
circus__autostart_celery_notify = false
circus__autostart_celery_notify_beat = false
circus__autostart_source_reader = false
circus__autostart_uwsgi = false
circus__webapp_port = 8119
uwsgi__processes = 4
web_analytics_piwik_script =
filter:raven__dsn =
raven_url =
handler_sentry__dsn =
saml_country = CA
saml_state = Quebec
saml_locality = Montreal
saml_org = Conversence
saml_email = testing@idealoom.org
mail.tls = false
handoff_to_nginx = false
upload_root = var/test_uploads
_requirement_inputs = requirements.in requirements_doc.in requirements_tests.in
frozen_requirements = requirements-tests-%d.frozen
